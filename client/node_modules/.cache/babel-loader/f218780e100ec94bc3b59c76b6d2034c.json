{"ast":null,"code":"import _defineProperty from\"/Users/michael/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/michael/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/michael/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,updateContact=contactContext.updateContact,clearCurrent=contactContext.clearCurrent,current=contactContext.current;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);//in use effect, we include our dependencies contactContext and current\n//useEffect will only be triggered when one of these change\nvar _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),' ',\"Personal\",' ',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:onChange}),' ',\"Professional\",/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?'Update Contact':'Add Contact',className:\"btn btn-primary btn-block\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default ContactForm;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","clearCurrent","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, updateContact, clearCurrent, current } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [contactContext, current]);\n\n  //in use effect, we include our dependencies contactContext and current\n  //useEffect will only be triggered when one of these change\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />{' '}\n      Professional\n      <div>\n        <input\n          type='submit'\n          value={current ? 'Update Contact' : 'Add Contact'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}