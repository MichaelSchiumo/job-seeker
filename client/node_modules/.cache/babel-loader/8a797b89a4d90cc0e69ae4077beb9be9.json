{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER // SET_ALERT,\n// REMOVE_ALERT,\n} from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","state","action","type","contacts","payload","filter","contact","id","map","current","filtered","regex","RegExp","name","match","email"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,CAQE;AACA;AATF,OAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAKF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD3B;AAFL,OAAP;;AAOF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,GAAf,CAAoBF,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD5C;AAFL,OAAP;;AAOF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELS,QAAAA,OAAO,EAAER,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELS,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELU,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAKF,SAAKZ,eAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAQF;AACE,aAAOX,KAAP;AAlDJ;AAoDD,CArDD","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  // SET_ALERT,\n  // REMOVE_ALERT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload],\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}