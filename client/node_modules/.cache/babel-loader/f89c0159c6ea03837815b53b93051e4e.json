{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var text=useRef('');var clearFilter=contactContext.clearFilter,filterContacts=contactContext.filterContacts,filtered=contactContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(event){if(text.current.value!==''){filterContacts(event.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts...\",onChange:onChange}));};export default ContactFilter;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","clearFilter","filterContacts","filtered","current","value","onChange","event","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAF0B,GAIlBM,CAAAA,WAJkB,CAIwBF,cAJxB,CAIlBE,WAJkB,CAILC,cAJK,CAIwBH,cAJxB,CAILG,cAJK,CAIWC,QAJX,CAIwBJ,cAJxB,CAIWI,QAJX,CAM1BP,SAAS,CAAC,UAAM,CACd,GAAIO,QAAQ,GAAK,IAAjB,CAAuB,CACrBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACD,CACF,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BH,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAd,CACD,CAFD,IAEO,CACLJ,WAAW,GACZ,CACF,CAND,CAQA,mBACE,6CACE,6BACE,GAAG,CAAED,IADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,oBAHd,CAIE,QAAQ,CAAEM,QAJZ,EADF,CADF,CAUD,CA9BD,CAgCA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const text = useRef('');\n\n  const { clearFilter, filterContacts, filtered } = contactContext;\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = (event) => {\n    if (text.current.value !== '') {\n      filterContacts(event.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form>\n      <input\n        ref={text}\n        type='text'\n        placeholder='Filter Contacts...'\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n"]},"metadata":{},"sourceType":"module"}