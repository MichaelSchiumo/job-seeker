{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types.js';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = async contact => {\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact,\n      current: state.current,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filtered: state.filtered,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","type","payload","deleteContact","id","updateContact","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,aARP;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,OAAO,EAAE,IAFU;AAGnBC,IAAAA,QAAQ,EAAE;AAHS,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACK,cAAD,EAAiBU,YAAjB,CAApC,CAP8B,CAS9B;;AACA,QAAMM,UAAU,GAAG,MAAOC,OAAP,IAAmB;AACpCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEjB,WAAR;AAAqBkB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAFD,CAV8B,CAc9B;;;AAEA,QAAMG,aAAa,GAAIC,EAAD,IAAQ;AAC5BN,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEhB,cAAR;AAAwBiB,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACD,GAFD,CAhB8B,CAoB9B;;;AACA,QAAMC,aAAa,GAAIL,OAAD,IAAa;AACjCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEb,cAAR;AAAwBc,MAAAA,OAAO,EAAEF;AAAjC,KAAD,CAAR;AACD,GAFD,CArB8B,CAyB9B;;;AAEA,QAAMM,UAAU,GAAIN,OAAD,IAAa;AAC9BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEf,WAAR;AAAqBgB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAFD,CA3B8B,CA+B9B;;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBT,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACD,GAFD,CAjC8B,CAqC9B;;;AACA,QAAMqB,cAAc,GAAIC,IAAD,IAAU;AAC/BX,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEZ,eAAR;AAAyBa,MAAAA,OAAO,EAAEO;AAAlC,KAAD,CAAR;AACD,GAFD,CAtC8B,CA0C9B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADX;AAELK,MAAAA,UAFK;AAGLI,MAAAA,aAHK;AAILR,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJV;AAKLW,MAAAA,UALK;AAMLC,MAAAA,YANK;AAOLF,MAAAA,aAPK;AAQLT,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QARX;AASLY,MAAAA,cATK;AAULE,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGlB,KAAK,CAACmB,QAdT,CADF;AAkBD,CAjED;;AAmEA,eAAepB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types.js';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  // Add Contact\n  const addContact = async (contact) => {\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete Contact\n\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Update Contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  // Set Current Contact\n\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n        current: state.current,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filtered: state.filtered,\n        filterContacts,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}