{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types.js';\nimport contactContext from './contactContext';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill J',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sarah Smith',\n      email: 'sarah@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'John Doe',\n      email: 'johhnyboy@gmail.com',\n      phone: '999-999-9999',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n  // Clear Filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact,\n      current: state.current,\n      setCurrent,\n      clearCurrent,\n      updateContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","contactContext","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","payload","deleteContact","updateContact","setCurrent","clearCurrent","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types.js';\nimport contactContext from './contactContext';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'Jill J',\n        email: 'jill@gmail.com',\n        phone: '111-111-1111',\n        type: 'personal',\n      },\n      {\n        id: 2,\n        name: 'Sarah Smith',\n        email: 'sarah@gmail.com',\n        phone: '222-222-2222',\n        type: 'personal',\n      },\n      {\n        id: 3,\n        name: 'John Doe',\n        email: 'johhnyboy@gmail.com',\n        phone: '999-999-9999',\n        type: 'professional',\n      },\n    ],\n    current: null,\n    filtered: null,\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  // Add Contact\n  const addContact = (contact) => {\n    contact.id = uuid();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete Contact\n\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Update Contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  // Set Current Contact\n\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  // Clear Filter\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n        current: state.current,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}