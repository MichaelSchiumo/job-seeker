{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\nimport { REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types.js';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //   REGISTER User\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; //  LOAD USER\n\n\n  const loadUser = () => {}; //   LOGIN USER\n\n\n  const login = () => {}; //   LOGOUT\n\n\n  const logout = () => {}; //   CLEAR ERRORS\n\n\n  const clearErrors = () => {};\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      clearErrors,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","axios","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","register","formData","config","headers","res","post","type","REGISTER_SUCCESS","payload","data","response","msg","loadUser","login","logout","clearErrors","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,YAPF,QAQO,aARP;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,KAAK,EAAE,IAJY;AAKnBC,IAAAA,IAAI,EAAE;AALa,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CAT2B,CAW3B;;AAEA,QAAMU,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEC,gBADC;AAEPC,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,OAAD,CAAR;AAID,KAND,CAME,OAAOb,KAAP,EAAc;AACdG,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEzB,aADC;AAEP2B,QAAAA,OAAO,EAAEZ,KAAK,CAACc,QAAN,CAAeD,IAAf,CAAoBE;AAFtB,OAAD,CAAR;AAID;AACF,GAnBD,CAb2B,CAkC3B;;;AACA,QAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB,CAnC2B,CAoC3B;;;AACA,QAAMC,KAAK,GAAG,MAAM,CAAE,CAAtB,CArC2B,CAsC3B;;;AACA,QAAMC,MAAM,GAAG,MAAM,CAAE,CAAvB,CAvC2B,CAyC3B;;;AACA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AACA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLxB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILE,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAJP;AAKLD,MAAAA,KAAK,EAAEE,KAAK,CAACF,KALR;AAMLI,MAAAA,QANK;AAOLY,MAAAA,QAPK;AAQLG,MAAAA,WARK;AASLD,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGzB,KAAK,CAAC2B,QAbT,CADF;AAiBD,CA5DD;;AA8DA,eAAe5B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './authReducer';\nimport axios from 'axios';\n\nimport {\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types.js';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //   REGISTER User\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.msg,\n      });\n    }\n  };\n\n  //  LOAD USER\n  const loadUser = () => {};\n  //   LOGIN USER\n  const login = () => {};\n  //   LOGOUT\n  const logout = () => {};\n\n  //   CLEAR ERRORS\n  const clearErrors = () => {};\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        clearErrors,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}