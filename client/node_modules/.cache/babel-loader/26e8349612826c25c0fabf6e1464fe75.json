{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, GET_CONTACTS, CLEAR_CONTACTS, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types.js';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //get contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    } // dispatch({ type: UPDATE_CONTACT, payload: contact });\n\n  }; //clear contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact,\n      current: state.current,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filtered: state.filtered,\n      filterContacts,\n      clearFilter,\n      error: state.error,\n      getContacts,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","GET_CONTACTS","CLEAR_CONTACTS","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","updateContact","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from '../types.js';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  //get contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  // Add Contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  // Delete Contact\n\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  // Update Contact\n  const updateContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n\n    // dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  //clear contacts\n\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n        current: state.current,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filtered: state.filtered,\n        filterContacts,\n        clearFilter,\n        error: state.error,\n        getContacts,\n        clearContacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}