{"ast":null,"code":"import _toConsumableArray from\"/Users/michael/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/michael/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_CONTACT,GET_CONTACTS,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,CLEAR_CONTACTS// SET_ALERT,\n// REMOVE_ALERT,\n}from'../types';export default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload,loading:false});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null,loading:false});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null,loading:false});case FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);}),loading:false});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:null,filtered:null,error:null,current:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload,loading:false});default:return state;}});","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","GET_CONTACTS","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","_id","map","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"qQAAA,OACEA,WADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,WAJF,CAKEC,aALF,CAMEC,cANF,CAOEC,eAPF,CAQEC,YARF,CASEC,aATF,CAUEC,cACA;AACA;AAZF,KAaO,UAbP,CAeA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,YAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAMF,IAAKf,CAAAA,WAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAMF,IAAKb,CAAAA,cAAL,CACE,sCACKQ,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACR,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAApC,EADQ,CAFZ,CAKEC,OAAO,CAAE,KALX,GAQF,IAAKV,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAmB,SAACF,OAAD,QAC3BA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAD3B,EAAnB,CAFZ,CAKEF,OAAO,CAAE,KALX,GAQF,IAAKZ,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEU,OAAO,CAAET,MAAM,CAACG,OAFlB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKX,CAAAA,aAAL,CACE,sCACKM,KADL,MAEEU,OAAO,CAAE,IAFX,CAGEL,OAAO,CAAE,KAHX,GAMF,IAAKR,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEW,QAAQ,CAAE,IAFZ,CAGEN,OAAO,CAAE,KAHX,GAMF,IAAKT,CAAAA,eAAL,CACE,sCACKI,KADL,MAEEW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAACC,OAAD,CAAa,CAC3C,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcZ,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CAHS,CAFZ,CAMEP,OAAO,CAAE,KANX,GASF,IAAKN,CAAAA,cAAL,CACE,sCACKC,KADL,MAEEG,QAAQ,CAAE,IAFZ,CAGEQ,QAAQ,CAAE,IAHZ,CAIEM,KAAK,CAAE,IAJT,CAKEP,OAAO,CAAE,IALX,GAQF,IAAKZ,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEiB,KAAK,CAAEhB,MAAM,CAACG,OAFhB,CAGEC,OAAO,CAAE,KAHX,GAMF,QACE,MAAOL,CAAAA,KAAP,CAhFJ,CAkFD,CAnFD","sourcesContent":["import {\n  ADD_CONTACT,\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS,\n  // SET_ALERT,\n  // REMOVE_ALERT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false,\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n        loading: false,\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n        loading: false,\n      };\n\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}