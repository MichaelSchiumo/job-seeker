{"ast":null,"code":"import { ADD_CONTACT, GET_CONTACTS, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS // SET_ALERT,\n// REMOVE_ALERT,\n} from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload,\n        loading: false\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null,\n        loading: false\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null,\n        loading: false\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n        loading: false\n      };\n\n    case CLEAR_CONTACTS:\n      return { ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/michael/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","GET_CONTACTS","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","_id","map","id","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,YARF,EASEC,aATF,EAUEC,cAVF,CAWE;AACA;AAZF,OAaO,UAbP;AAeA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFL;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAD5B,CAFL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBF,OAAD,IAC3BA,OAAO,CAACG,EAAR,KAAeT,MAAM,CAACG,OAAP,CAAeM,EAA9B,GAAmCT,MAAM,CAACG,OAA1C,GAAoDG,OAD5C,CAFL;AAKLF,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACG,OAFX;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,OAAO,EAAE,IAFJ;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELY,QAAAA,QAAQ,EAAE,IAFL;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELY,QAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS,CAFL;AAMLR,QAAAA,OAAO,EAAE;AANJ,OAAP;;AASF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,QAAQ,EAAE,IAFL;AAGLS,QAAAA,QAAQ,EAAE,IAHL;AAILM,QAAAA,KAAK,EAAE,IAJF;AAKLP,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKb,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELkB,QAAAA,KAAK,EAAEjB,MAAM,CAACG,OAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOL,KAAP;AAhFJ;AAkFD,CAnFD","sourcesContent":["import {\n  ADD_CONTACT,\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS,\n  // SET_ALERT,\n  // REMOVE_ALERT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false,\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n        loading: false,\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n        loading: false,\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n        loading: false,\n      };\n\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}